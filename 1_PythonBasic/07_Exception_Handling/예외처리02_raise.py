"""
raise 구문 사용하는 이유와 목적
1. 에러 상황 명시 : 특정 조건에서 프로그램이 정상적으로 실행 될 수 없음을 명시적으로 나타낼 수 있습니다.
2. 코드 디버깅 용이 : 에러 메시지와 함께 예외를 발생시켜, 문제의 원인을 쉽게 파악할 수 있게함.
3. 예외 처리 흐름 제어 : 특정 예외를 잡아내어 그에 맞는 측수한 처리를 할 수 있게 한다.

raise 구문 사용 법
raise 예외명 ("에러메세지") --> 에러메세지는 써줘도 되고 안써줘도 상관없음

ex)
1. raise Exception
2. raise Exception("에러메세지")

"""

# raise 구문을 사용해서 에러를 강제로 발생 시켜보기

try:
    num = int(input("음수를 입력해 주세요.>>>"))
    if num >= 0:
        raise Exception("양수는 입력 불가")
except Exception as e:
    print("에러 발생!" , e)